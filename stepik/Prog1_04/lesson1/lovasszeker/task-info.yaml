type: edu
files:
- name: test/Tests.java
  visible: false
  text: |-
    import org.junit.Test;

    import java.lang.reflect.Modifier;

    import static org.junit.Assert.assertEquals;
    import static org.junit.Assert.assertTrue;

    public class Tests extends BaseTest {
        @Test
        public void ososztaly() {
            assertTrue("az ososztaly modositva lett", testField(Jarmu.class, "pozicio", int.class, Modifier.PRIVATE));

            assertEquals("az ososztaly modositva lett", 1, Jarmu.class.getDeclaredFields().length);
            assertEquals("az ososztaly modositva lett", 2, Jarmu.class.getDeclaredMethods().length);
            assertEquals("az ososztaly modositva lett", 1, Jarmu.class.getConstructors().length);
        }

        @Test
        public void halad() {
            Jarmu j = new Jarmu();
            j.halad(2);
            assertEquals("ososztaly halad metodusa hibas", 2, j.getPozicio());

            j.halad(15);
            assertEquals("ososztaly halad metodusa hibas", 17, j.getPozicio());

            j.halad(55);
            assertEquals("ososztaly halad metodusa hibas", 72, j.getPozicio());

            j.halad(5);
            assertEquals("ososztaly halad metodusa hibas", 77, j.getPozicio());

            LovasSzeker l = new LovasSzeker();
            l.halad(2);
            assertEquals("lovasszeker halad metodusa hibas", 2, l.getPozicio());

            l.halad(4);
            assertEquals("lovasszeker halad metodusa hibas", 6, l.getPozicio());

            l.halad(-2);
            assertEquals("lovasszeker halad metodusa hibas", 4, l.getPozicio());

            l.halad(7);
            assertEquals("lovasszeker halad metodusa hibas", 3, l.getPozicio());

            l.halad(4);
            assertEquals("lovasszeker halad metodusa hibas", 7, l.getPozicio());

            l.halad(5);
            assertEquals("lovasszeker halad metodusa hibas", 6, l.getPozicio());
        }
    }
  learner_created: false
- name: src/Jarmu.java
  visible: true
  text: |-
    public class Jarmu {
        private int pozicio = 0;

        public void halad(int mennyiseg) {
            pozicio += mennyiseg;
        }

        public int getPozicio() {
            return pozicio;
        }
    }
  learner_created: false
- name: src/LovasSzeker.java
  visible: true
  placeholders:
  - offset: 46
    length: 175
    placeholder_text: // megoldas
    initial_state:
      length: 11
      offset: 46
    initialized_from_dependency: false
    selected: true
    status: Unchecked
    encrypted_possible_answer: |-
      @Override
          public void halad(int mennyiseg) {
              if (mennyiseg < 5) {
                  super.halad(mennyiseg);
              } else {
                  super.halad(-1);
              }
          }
  text: |
    public class LovasSzeker extends Jarmu {

        // megoldas
    }
  learner_created: false
status: Solved
feedback:
  message: Congratulations!
  time: "Tue, 12 Mar 2024 14:07:59 UTC"
record: -1
solution_hidden: true
