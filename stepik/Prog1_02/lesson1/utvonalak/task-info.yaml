type: edu
files:
- name: test/Tests.java
  visible: false
  text: |-
    import org.junit.Assert;
    import org.junit.Test;

    import static org.junit.Assert.assertEquals;

    public class Tests {
        @Test
        public void teszt_01() {
            assertEquals("hibas eredmeny", 1, Utvonalak.legrovidebb(new int[] {6, 3, 5}));
        }

        @Test
        public void teszt_02() {
            assertEquals("hibas eredmeny", 1, Utvonalak.legrovidebb(new int[] {6, 3, 5, 4, 5, 7}));
        }

        @Test
        public void teszt_03() {
            assertEquals("hibas eredmeny", 4, Utvonalak.legrovidebb(new int[] {6, 4, 9, 11, 3, 6}));
        }

        @Test
        public void teszt_04() {
            assertEquals("hibas eredmeny", 0, Utvonalak.legrovidebb(new int[] {6000}));
        }

        @Test
        public void teszt_05() {
            assertEquals("hibas eredmeny", 2, Utvonalak.legrovidebb(new int[] {6, 6, 2, 2, 5, 4, 5, 7}));
        }

        @Test
        public void teszt_06() {
            assertEquals("hibas eredmeny", 0, Utvonalak.legrovidebb(new int[] {5, 5, 5, 5, 5, 5}));
        }

    }
  learner_created: false
- name: src/Utvonalak.java
  visible: true
  placeholders:
  - offset: 425
    length: 0
    placeholder_text: return 0;
    initial_state:
      length: 9
      offset: 82
    initialized_from_dependency: false
    selected: true
    status: Unchecked
    encrypted_possible_answer: |-
      int min = Integer.MAX_VALUE;
              int index = 0;

              for (int i = 0; i < tomb.length; i++) {
                  if (tomb[i] < min) {
                      min = tomb[i];
                      index = i;
                  }
              }

              return index;
  text: |-
    public class Utvonalak {

        public static int legrovidebb(int[] tomb) {
            return 0;
        }

    }
  learner_created: false
status: Solved
feedback:
  message: Congratulations!
  time: "Thu, 29 Feb 2024 18:48:17 UTC"
record: -1
solution_hidden: true
