type: edu
files:
- name: src/Csokor.java
  visible: true
  text: |
    public class Csokor {
        int tipus;
        int mennyiseg;
    }
  learner_created: false
- name: src/Bolt.java
  visible: true
  placeholders:
  - offset: 753
    length: 12
    placeholder_text: return 0;
    initial_state:
      length: 9
      offset: 204
    initialized_from_dependency: false
    selected: true
    status: Unchecked
    encrypted_possible_answer: |-
      for (int i = 0; i < rendeles.length; i++) {
                  boolean talalt = false;

                  for (int j = 0; j < raktarkeszlet.length; j++) {
                      if (rendeles[i].tipus == raktarkeszlet[j].tipus) {
                          if (rendeles[i].mennyiseg > raktarkeszlet[j].mennyiseg) {
                              return false;
                          } else {
                              talalt = true;
                          }
                      }
                  }

                  if (!talalt) {
                      return false;
                  }
              }

              return true;
  text: |-
    public class Bolt {
        public static boolean viragRendeles(Csokor[] raktarkeszlet, Csokor[] rendeles) {
            if (raktarkeszlet.length < rendeles.length) {
                return false;
            }

            return 0;
        }
    }
  learner_created: false
- name: test/KulonbozoHossz.java
  visible: false
  text: |
    import org.junit.Test;

    import static org.junit.Assert.assertFalse;
    import static org.junit.Assert.assertTrue;

    public class KulonbozoHossz {
        @Test
        public void teszt_01() {
            Csokor[] raktarkeszlet = {
                    TestHelper.createCsokor(1, 5),
                    TestHelper.createCsokor(2, 3)
            };

            Csokor[] rendeles = {
                    TestHelper.createCsokor(1, 3),
                    TestHelper.createCsokor(2, 1),
                    TestHelper.createCsokor(3, 4),
                    TestHelper.createCsokor(4, 1),
            };

            assertFalse("Hibas eredmeny", Bolt.viragRendeles(raktarkeszlet, rendeles));
        }

        @Test
        public void teszt_02() {
            Csokor[] raktarkeszlet2 = {
                    TestHelper.createCsokor(1, 5),
                    TestHelper.createCsokor(2, 3),
                    TestHelper.createCsokor(3, 7),
                    TestHelper.createCsokor(4, 2)
            };

            Csokor[] rendeles2 = {
                    TestHelper.createCsokor(1, 3),
            };

            assertTrue("Hibas eredmeny", Bolt.viragRendeles(raktarkeszlet2, rendeles2));
        }
    }
  learner_created: false
- name: test/RandomSorrend.java
  visible: false
  text: |
    import org.junit.Test;

    import static org.junit.Assert.assertFalse;
    import static org.junit.Assert.assertTrue;

    public class RandomSorrend {
        @Test
        public void teszt_01() {
            Csokor[] raktarkeszlet = {
                    TestHelper.createCsokor(2, 5),
                    TestHelper.createCsokor(5, 3)
            };

            Csokor[] rendeles = {
                    TestHelper.createCsokor(5, 4),
                    TestHelper.createCsokor(2, 2)
            };

            assertFalse("Hibas eredmeny", Bolt.viragRendeles(raktarkeszlet, rendeles));
        }

        @Test
        public void teszt_02() {
            Csokor[] raktarkeszlet2 = {
                    TestHelper.createCsokor(7, 55),
                    TestHelper.createCsokor(4, 30),
                    TestHelper.createCsokor(5, 71),
                    TestHelper.createCsokor(11, 21),
                    TestHelper.createCsokor(110, 51),
                    TestHelper.createCsokor(66, 30),
                    TestHelper.createCsokor(21, 71),
                    TestHelper.createCsokor(1, 4)
            };

            Csokor[] rendeles2 = {
                    TestHelper.createCsokor(5, 40),
                    TestHelper.createCsokor(66, 20),
                    TestHelper.createCsokor(110, 1),
                    TestHelper.createCsokor(7, 5),
                    TestHelper.createCsokor(21, 69)
            };

            assertTrue("Hibas eredmeny", Bolt.viragRendeles(raktarkeszlet2, rendeles2));
        }
    }
  learner_created: false
- name: test/Bonyolult.java
  visible: false
  text: |
    import org.junit.Test;

    import static org.junit.Assert.assertFalse;

    public class Bonyolult {
        @Test
        public void teszt_01() {
            Csokor[] raktarkeszlet = {
                    TestHelper.createCsokor(2, 5),
                    TestHelper.createCsokor(5, 3)
            };

            Csokor[] rendeles = {
                    TestHelper.createCsokor(2, 4),
                    TestHelper.createCsokor(4, 4)
            };

            assertFalse("Hibas eredmeny", Bolt.viragRendeles(raktarkeszlet, rendeles));
        }
    }
  learner_created: false
- name: test/TestHelper.java
  visible: false
  text: |
    public class TestHelper {
        public static Csokor createCsokor(int a, int b) {
            Csokor cs = new Csokor();
            cs.tipus = a;
            cs.mennyiseg = b;
            return cs;
        }
    }
  learner_created: false
- name: test/Alapeset.java
  visible: false
  text: |-
    import org.junit.Test;

    import static org.junit.Assert.*;

    public class Alapeset {
        @Test
        public void teszt_01() {
            Csokor[] raktarkeszlet = {
                TestHelper.createCsokor(1, 5),
                TestHelper.createCsokor(2, 3),
                TestHelper.createCsokor(3, 7),
                TestHelper.createCsokor(4, 2)
            };

            Csokor[] rendeles = {
                TestHelper.createCsokor(1, 3),
                TestHelper.createCsokor(2, 1),
                TestHelper.createCsokor(3, 4),
                TestHelper.createCsokor(4, 1)
            };

            assertTrue("Hibas eredmeny", Bolt.viragRendeles(raktarkeszlet, rendeles));
        }

        @Test
        public void teszt_02() {
            Csokor[] raktarkeszlet2 = {
                    TestHelper.createCsokor(1, 5),
                    TestHelper.createCsokor(2, 3),
                    TestHelper.createCsokor(3, 7),
                    TestHelper.createCsokor(4, 2)
            };

            Csokor[] rendeles2 = {
                    TestHelper.createCsokor(1, 3),
                    TestHelper.createCsokor(2, 4),
                    TestHelper.createCsokor(3, 4),
                    TestHelper.createCsokor(4, 1)
            };

            assertFalse("Hibas eredmeny", Bolt.viragRendeles(raktarkeszlet2, rendeles2));
        }
    }
  learner_created: false
status: Solved
feedback:
  message: Congratulations!
  time: "Fri, 23 Feb 2024 19:35:33 UTC"
record: -1
solution_hidden: true
