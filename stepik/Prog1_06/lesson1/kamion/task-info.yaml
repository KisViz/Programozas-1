type: edu
custom_name: kamion
files:
- name: test/Tests.java
  visible: false
  text: |-
    import org.junit.Assert;
    import org.junit.Test;

    import static org.junit.Assert.assertArrayEquals;
    import static org.junit.Assert.assertEquals;

    public class Tests {
        @Test
        public void teszt_01() {
            Kamion k = new Kamion(5);
            assertArrayEquals("a tomb nem megfelelo", new int[] {0, 0, 0, 0, 0}, k.csomagok);
            k.csomagotFelvesz(10);
            assertArrayEquals("a tomb nem megfelelo", new int[] {10, 0, 0, 0, 0}, k.csomagok);
            k.csomagotFelvesz(5);
            assertArrayEquals("a tomb nem megfelelo", new int[] {10, 5, 0, 0, 0}, k.csomagok);
            k.csomagotFelvesz(3);
            assertArrayEquals("a tomb nem megfelelo", new int[] {10, 5, 3, 0, 0}, k.csomagok);
            k.csomagotFelvesz(7);
            assertArrayEquals("a tomb nem megfelelo", new int[] {10, 5, 3, 7, 0}, k.csomagok);
            k.csomagotFelvesz(7);
            assertArrayEquals("a tomb nem megfelelo", new int[] {10, 5, 3, 7, 7}, k.csomagok);
            k.csomagotFelvesz(4);
            assertArrayEquals("a tomb nem megfelelo", new int[] {10, 5, 3, 7, 7}, k.csomagok);
        }

        @Test
        public void teszt_02() {
            Kamion k2 = new Kamion(2);
            assertArrayEquals("a tomb nem megfelelo", new int[] {0, 0}, k2.csomagok);
            k2.csomagotFelvesz(6);
            assertArrayEquals("a tomb nem megfelelo", new int[] {6, 0}, k2.csomagok);
            k2.csomagotFelvesz(6);
            assertArrayEquals("a tomb nem megfelelo", new int[] {6, 6}, k2.csomagok);
            k2.csomagotFelvesz(6);
            assertArrayEquals("a tomb nem megfelelo", new int[] {6, 6}, k2.csomagok);
        }
    }
  learner_created: false
- name: src/Kamion.java
  visible: true
  placeholders:
  - offset: 232
    length: 97
    placeholder_text: // megoldas
    initial_state:
      length: 11
      offset: 232
    initialized_from_dependency: false
    selected: true
    status: Unchecked
    encrypted_possible_answer: |-
      if (csomagok[i] == 0) {
                      csomagok[i] = meret;
                      break;
                  }
  text: |-
    public class Kamion {
        public int[] csomagok;

        public Kamion(int meret) {
            csomagok = new int[meret];
        }

        public void csomagotFelvesz(int meret) {
            for (int i = 0; i < csomagok.length; i++) {
                // megoldas
            }
        }

    }
  learner_created: false
status: Solved
feedback:
  message: Congratulations!
  time: "Mon, 22 Apr 2024 11:15:05 UTC"
record: -1
solution_hidden: true
