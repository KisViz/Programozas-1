type: edu
custom_name: parkolo
files:
- name: test/Tests.java
  visible: false
  text: |-
    import org.junit.Assert;
    import org.junit.Test;

    import java.util.Arrays;
    import java.util.Collections;
    import java.util.List;

    import static org.junit.Assert.assertEquals;

    public class Tests {
        @Test
        public void teszt() {
            Auto a1 = new Auto("ASD", "AAA-111");
            Auto a2 = new Auto("ASD2", "BBB-111");
            Auto a3 = new Auto("ASD3", "CCC-111");
            Auto a4 = new Auto("ASD2", "DDD-111");
            Auto a5 = new Auto("ASD", "ABC-123");
            Auto a6 = new Auto("BHW", "WLB-362");

            Parkolo p = new Parkolo(2);
            List<Auto> lista = p.getAutok();

            assertEquals("hibas kapacitas", 2, p.getKapacitas());
            assertEquals("a lista hibas", Collections.emptyList(), lista);

            p.beall(a1);
            assertEquals("beallas utan a lista hibas", Collections.singletonList(a1), lista);

            p.beall(a2);
            assertEquals("beallas utan a lista hibas", Arrays.asList(a1, a2), lista);

            p.beall(a3);
            assertEquals("beallas utan a lista hibas", Arrays.asList(a1, a2), lista);

            p.bovit();
            assertEquals("bovites utan hibas kapacitas", 4, p.getKapacitas());

            p.beall(a4);
            assertEquals("beallas utan a lista hibas", Arrays.asList(a1, a2, a4), lista);

            p.beall(a5);
            assertEquals("beallas utan a lista hibas", Arrays.asList(a1, a2, a4, a5), lista);

            p.beall(a6);
            assertEquals("beallas utan a lista hibas", Arrays.asList(a1, a2, a4, a5), lista);

            p.kiall(a1);
            assertEquals("kiallas utan a lista hibas", Arrays.asList(a2, a4, a5), lista);

            p.kiall(a5);
            assertEquals("kiallas utan a lista hibas", Arrays.asList(a2, a4), lista);

            p.kiall(a6);
            assertEquals("kiallas utan a lista hibas", Arrays.asList(a2, a4), lista);

            p.ledozerol();
            assertEquals("ledozerolas utan a kapacitas hibas", 0, p.getKapacitas());
            assertEquals("ledozerolas utan a lista hibas", Collections.emptyList(), lista);
        }
    }
  learner_created: false
- name: src/Auto.java
  visible: true
  text: |
    public class Auto {
        private String marka;
        private String rendszam;

        public Auto(String marka, String rendszam) {
            this.marka = marka;
            this.rendszam = rendszam;
        }

        public String getMarka() {
            return marka;
        }

        public String getRendszam() {
            return rendszam;
        }

    }
  learner_created: false
- name: src/Parkolo.java
  visible: true
  placeholders:
  - offset: 294
    length: 67
    placeholder_text: // megoldas
    initial_state:
      length: 11
      offset: 294
    initialized_from_dependency: false
    selected: true
    status: Unchecked
    encrypted_possible_answer: |-
      if (autok.size() < kapacitas) {
                  autok.add(a);
              }
  - offset: 409
    length: 16
    placeholder_text: // megoldas
    initial_state:
      length: 11
      offset: 353
    initialized_from_dependency: false
    selected: false
    status: Unchecked
    encrypted_possible_answer: autok.remove(a);
  - offset: 587
    length: 16
    placeholder_text: // tobbi metodus
    initial_state:
      length: 16
      offset: 376
    initialized_from_dependency: false
    selected: true
    status: Unchecked
    encrypted_possible_answer: |-
      public void ledozerol() {
              autok.clear();
              kapacitas = 0;
          }

          public void bovit() {
              kapacitas *= 2;
          }
  text: |-
    import java.util.LinkedList;
    import java.util.List;

    public class Parkolo {
        private List<Auto> autok;
        private int kapacitas;

        public Parkolo(int kapacitas) {
            this.autok = new LinkedList<>();
            this.kapacitas = kapacitas;
        }

        public void beall(Auto a) {
            // megoldas
        }

        public void kiall(Auto a) {
            // megoldas
        }

        // tobbi metodus


        public int getKapacitas() {
            return kapacitas;
        }

        public List<Auto> getAutok() {
            return autok;
        }
    }
  learner_created: false
status: Solved
feedback:
  message: Congratulations!
  time: "Tue, 23 Apr 2024 16:45:44 UTC"
record: -1
solution_hidden: true
